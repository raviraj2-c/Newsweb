{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\Newsweb\\\\src\\\\contaner\\\\News.js\",\n  _s = $RefreshSig$();\n//this is the code for class based \n\n// import React, { Component } from 'react'\n// import Newsitems from './Newsitems'\n// import Spinner from './Spinner';\n// import propTypes from 'prop-types'\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// export class News extends Component {\n//   static defaultprop ={\n//    country : 'in',\n//    sizeofpage : 5,\n//    category : 'technology'\n//   }\n//   static propTypes ={\n//     country : propTypes.string,\n//    sizeofpage : propTypes.number,\n//    category : propTypes.string\n//   }\n//     articles = [ \n//       ]\n//       capitalizeFirstletter = (string)=>{\n//         return string.charAt(0).toUpperCase()+string.slice(1);\n//       }\n//     constructor(props){\n//         super(props);\n//         this.state ={\n//             articles : this.articles,\n//             loading : false,\n//             page:1,\n//             totalResults:0\n//           }\n//           document.title=`${this.capitalizeFirstletter(props.category)}-JHC_News`;\n//     }\n//     async updateNews(){\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\n//       this.setState({loading : true})\n//       let data = await fetch(url);\n//       let parsedData = await data.json()\n//       console.log(parsedData);\n//        this.setState({articles: parsedData.articles , \n//         totalResults: parsedData.totalResults,\n//         loading : false\n//       })\n//     }\n//     async componentDidMount(){\n//       this.updateNews();\n//     } \n//     // privespag = async ()=>{\n//     //   this.setState({page: this.state.page-1})\n//     //   this.updateNews();\n//     // }\n\n//     // nextpag = async ()=>{\n//     //   this.setState({page: this.state.page+1})\n//     //   this.updateNews();\n//     // }\n//     fetchMoreData = async() => {\n//       this.setState({page: this.state.page+1})\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\n//       this.setState({loading : true})\n//       let data = await fetch(url);\n//       let parsedData = await data.json()\n//       console.log(parsedData);\n//        this.setState({articles: this.state.articles.concat(parsedData.articles) , \n//         totalResults: parsedData.totalResults,\n//         loading : false\n//       })\n//     };\n\n//   render() {\n\n//     return (\n//       <div>\n//         <div className=' '>\n//             <h2 className='text-center'>JHC NEW - Top {this.capitalizeFirstletter(props.category)} Headlines</h2><hr  style={{border : '1px solid ' , color:'black'}}/>\n//            {/* {this.state.loading && <Spinner/>} */}\n//            <InfiniteScroll\n//           dataLength={this.state.articles.length}\n//           next={this.fetchMoreData}\n//           hasMore={this.state.articles.length !== this.totalResults}\n//           loader={<Spinner/>}\n//         >\n//           <div className='container'>\n//         <div className='row '>\n//         {/* {!this.state.loading && */}\n//            {this.state.articles.map((element)=>{\n//        return <div className='col-md-4 my-4'key = {element.url}>\n//         <Newsitems  title={element.title ? element.title.slice(0,45):\"\"} description={element.description ? element.description.slice(0,88):\"\"} imgurl={element.urlToImage} newsurl={element.url} author={element.author} date={element.publishedAt} source={element.source.name}/>\n//         </div>        \n//             })}\n\n//         </div>\n//         </div>\n//         </InfiniteScroll>\n//       </div>\n//       {/* <div className='d-flex justify-content-around'>\n//       <button disabled={this.state.page<=1} type=\"button\" onClick={this.privespag} className=\"btn btn-dark\"> &larr; Prives </button>\n//       <button type=\"button\" disabled = {this.state.page + 1 > Math.ceil(this.state.totalResults/props.sizeofpage)} onClick={this.nextpag} className=\"btn btn-dark\">Next &rarr;</button>\n//       </div> */}\n//       </div>\n//     )\n//   }\n// }\n\n// export default News\n\n//this is the code for function based \nimport React, { useEffect, useState } from 'react';\nimport Newsitems from './Newsitems';\nimport Spinner from './Spinner';\nimport propTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState([]);\n  //document.title=`${this.capitalizeFirstletter(props.category)}-JHC_News`;\n  capitalizeFirstletter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.articles);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  useEffect(() => {\n    this.updateNews();\n  }, []);\n\n  // privespag = async ()=>{\n  //   this.setState({page: this.state.page-1})\n  //   this.updateNews();\n  // }\n\n  // nextpag = async ()=>{\n  //   this.setState({page: this.state.page+1})\n  //   this.updateNews();\n  // }\n  fetchMoreData = async () => {\n    this.setState({\n      page: this.state.page + 1\n    });\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log(parsedData);\n    this.setState({\n      articles: this.state.articles.concat(parsedData.articles),\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: [\"JHC NEW - Top \", this.capitalizeFirstletter(props.category), \" Headlines\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          border: '1px solid ',\n          color: 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.articles.length,\n        next: this.fetchMoreData,\n        hasMore: this.state.articles.length !== this.totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row \",\n            children: this.state.articles.map(element => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 my-4\",\n                children: /*#__PURE__*/_jsxDEV(Newsitems, {\n                  title: element.title ? element.title.slice(0, 45) : \"\",\n                  description: element.description ? element.description.slice(0, 88) : \"\",\n                  imgurl: element.urlToImage,\n                  newsurl: element.url,\n                  author: element.author,\n                  date: element.publishedAt,\n                  source: element.source.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 9\n                }, this)\n              }, element.url, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 7\n  }, this);\n};\n_s(News, \"1dCCSB7ramQXQemkcV8nAofo6kw=\");\n_c = News;\nNews.defaultprop = {\n  country: 'in',\n  sizeofpage: 5,\n  category: 'technology'\n};\nNews.propTypes = {\n  country: propTypes.string,\n  sizeofpage: propTypes.number,\n  category: propTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","Newsitems","Spinner","propTypes","InfiniteScroll","jsxDEV","_jsxDEV","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstletter","string","charAt","toUpperCase","slice","updateNews","url","country","category","apikey","state","sizeofpage","setState","data","fetch","parsedData","json","setProgress","fetchMoreData","console","log","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","border","color","dataLength","length","next","hasMore","loader","map","element","title","description","imgurl","urlToImage","newsurl","author","date","publishedAt","source","name","_c","defaultprop","number","$RefreshReg$"],"sources":["D:/reactjs/Newsweb/src/contaner/News.js"],"sourcesContent":["//this is the code for class based \r\n\r\n// import React, { Component } from 'react'\r\n// import Newsitems from './Newsitems'\r\n// import Spinner from './Spinner';\r\n// import propTypes from 'prop-types'\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// export class News extends Component {\r\n//   static defaultprop ={\r\n//    country : 'in',\r\n//    sizeofpage : 5,\r\n//    category : 'technology'\r\n//   }\r\n//   static propTypes ={\r\n//     country : propTypes.string,\r\n//    sizeofpage : propTypes.number,\r\n//    category : propTypes.string\r\n//   }\r\n//     articles = [ \r\n//       ]\r\n//       capitalizeFirstletter = (string)=>{\r\n//         return string.charAt(0).toUpperCase()+string.slice(1);\r\n//       }\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state ={\r\n//             articles : this.articles,\r\n//             loading : false,\r\n//             page:1,\r\n//             totalResults:0\r\n//           }\r\n//           document.title=`${this.capitalizeFirstletter(props.category)}-JHC_News`;\r\n//     }\r\n//     async updateNews(){\r\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\r\n//       this.setState({loading : true})\r\n//       let data = await fetch(url);\r\n//       let parsedData = await data.json()\r\n//       console.log(parsedData);\r\n//        this.setState({articles: parsedData.articles , \r\n//         totalResults: parsedData.totalResults,\r\n//         loading : false\r\n//       })\r\n//     }\r\n//     async componentDidMount(){\r\n//       this.updateNews();\r\n//     } \r\n//     // privespag = async ()=>{\r\n//     //   this.setState({page: this.state.page-1})\r\n//     //   this.updateNews();\r\n//     // }\r\n\r\n//     // nextpag = async ()=>{\r\n//     //   this.setState({page: this.state.page+1})\r\n//     //   this.updateNews();\r\n//     // }\r\n//     fetchMoreData = async() => {\r\n//       this.setState({page: this.state.page+1})\r\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\r\n//       this.setState({loading : true})\r\n//       let data = await fetch(url);\r\n//       let parsedData = await data.json()\r\n//       console.log(parsedData);\r\n//        this.setState({articles: this.state.articles.concat(parsedData.articles) , \r\n//         totalResults: parsedData.totalResults,\r\n//         loading : false\r\n//       })\r\n//     };\r\n\r\n//   render() {\r\n\r\n//     return (\r\n//       <div>\r\n//         <div className=' '>\r\n//             <h2 className='text-center'>JHC NEW - Top {this.capitalizeFirstletter(props.category)} Headlines</h2><hr  style={{border : '1px solid ' , color:'black'}}/>\r\n//            {/* {this.state.loading && <Spinner/>} */}\r\n//            <InfiniteScroll\r\n//           dataLength={this.state.articles.length}\r\n//           next={this.fetchMoreData}\r\n//           hasMore={this.state.articles.length !== this.totalResults}\r\n//           loader={<Spinner/>}\r\n//         >\r\n//           <div className='container'>\r\n//         <div className='row '>\r\n//         {/* {!this.state.loading && */}\r\n//            {this.state.articles.map((element)=>{\r\n//        return <div className='col-md-4 my-4'key = {element.url}>\r\n//         <Newsitems  title={element.title ? element.title.slice(0,45):\"\"} description={element.description ? element.description.slice(0,88):\"\"} imgurl={element.urlToImage} newsurl={element.url} author={element.author} date={element.publishedAt} source={element.source.name}/>\r\n//         </div>        \r\n//             })}\r\n            \r\n//         </div>\r\n//         </div>\r\n//         </InfiniteScroll>\r\n//       </div>\r\n//       {/* <div className='d-flex justify-content-around'>\r\n//       <button disabled={this.state.page<=1} type=\"button\" onClick={this.privespag} className=\"btn btn-dark\"> &larr; Prives </button>\r\n//       <button type=\"button\" disabled = {this.state.page + 1 > Math.ceil(this.state.totalResults/props.sizeofpage)} onClick={this.nextpag} className=\"btn btn-dark\">Next &rarr;</button>\r\n//       </div> */}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default News\r\n\r\n\r\n\r\n\r\n//this is the code for function based \r\nimport React, {useEffect,useState} from 'react'\r\nimport Newsitems from './Newsitems'\r\nimport Spinner from './Spinner';\r\nimport propTypes from 'prop-types'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst News =(props)=> {\r\n  const[articles,setArticles]=useState([]);\r\n  const[loading,setLoading]=useState(true);\r\n  const[page,setPage]=useState(1);\r\n  const[totalResults,setTotalResults]=useState([]);\r\n    //document.title=`${this.capitalizeFirstletter(props.category)}-JHC_News`;\r\n      capitalizeFirstletter = (string)=>{\r\n        return string.charAt(0).toUpperCase()+string.slice(1);\r\n      }\r\n    \r\n    const updateNews =async()=>{\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\r\n      this.setState({loading : true})\r\n      let data = await fetch(url);\r\n      let parsedData = await data.json()\r\n      props.setProgress(70);\r\n      setArticles(parsedData.articles)\r\n      setTotalResults(parsedData.articles)\r\n      setLoading(false)\r\n      props.setProgress(100);\r\n    }\r\n    useEffect(()=>{\r\n      this.updateNews();\r\n    },[])\r\n   \r\n    // privespag = async ()=>{\r\n    //   this.setState({page: this.state.page-1})\r\n    //   this.updateNews();\r\n    // }\r\n\r\n    // nextpag = async ()=>{\r\n    //   this.setState({page: this.state.page+1})\r\n    //   this.updateNews();\r\n    // }\r\n    fetchMoreData = async() => {\r\n      this.setState({page: this.state.page+1})\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apikey}&page=${this.state.page}&pageSize=${props.sizeofpage}`;\r\n      this.setState({loading : true})\r\n      let data = await fetch(url);\r\n      let parsedData = await data.json()\r\n      console.log(parsedData);\r\n       this.setState({articles: this.state.articles.concat(parsedData.articles) , \r\n        totalResults: parsedData.totalResults,\r\n        loading : false\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=' '>\r\n            <h2 className='text-center'>JHC NEW - Top {this.capitalizeFirstletter(props.category)} Headlines</h2><hr  style={{border : '1px solid ' , color:'black'}}/>\r\n           {/* {this.state.loading && <Spinner/>} */}\r\n           <InfiniteScroll\r\n          dataLength={this.state.articles.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={this.state.articles.length !== this.totalResults}\r\n          loader={<Spinner/>}\r\n        >\r\n          <div className='container'>\r\n        <div className='row '>\r\n        {/* {!this.state.loading && */}\r\n           {this.state.articles.map((element)=>{\r\n       return <div className='col-md-4 my-4'key = {element.url}>\r\n        <Newsitems  title={element.title ? element.title.slice(0,45):\"\"} description={element.description ? element.description.slice(0,88):\"\"} imgurl={element.urlToImage} newsurl={element.url} author={element.author} date={element.publishedAt} source={element.source.name}/>\r\n        </div>        \r\n            })}\r\n            \r\n        </div>\r\n        </div>\r\n        </InfiniteScroll>\r\n      </div>\r\n      {/* <div className='d-flex justify-content-around'>\r\n      <button disabled={this.state.page<=1} type=\"button\" onClick={this.privespag} className=\"btn btn-dark\"> &larr; Prives </button>\r\n      <button type=\"button\" disabled = {this.state.page + 1 > Math.ceil(this.state.totalResults/props.sizeofpage)} onClick={this.nextpag} className=\"btn btn-dark\">Next &rarr;</button>\r\n      </div> */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nNews.defaultprop ={\r\n  country : 'in',\r\n  sizeofpage : 5,\r\n  category : 'technology'\r\n }\r\nNews.propTypes ={\r\n   country : propTypes.string,\r\n  sizeofpage : propTypes.number,\r\n  category : propTypes.string\r\n }\r\n\r\nexport default News\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACpB,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACY,OAAO,EAACC,UAAU,CAAC,GAACb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAK,CAACc,IAAI,EAACC,OAAO,CAAC,GAACf,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAK,CAACgB,YAAY,EAACC,eAAe,CAAC,GAACjB,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACEkB,qBAAqB,GAAIC,MAAM,IAAG;IAChC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAACF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACvD,CAAC;EAEH,MAAMC,UAAU,GAAE,MAAAA,CAAA,KAAS;IACzB,IAAIC,GAAG,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}